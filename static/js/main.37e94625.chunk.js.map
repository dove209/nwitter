{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweet","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","onSubmit","event","preventDefault","update","className","type","placeholder","value","required","autoFocus","onChange","target","onClick","src","icon","faTrash","faPencilAlt","NweetFactory","userObj","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedevent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArr","docs","map","data","marginTop","key","AuthForm","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37e94625.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweet, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweet.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"해당 게시물을 삭제 하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweet.id}`).delete();\r\n      if (!!nweet.attachmentUrl) {\r\n        await storageService.refFromURL(nweet.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing(!editing);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweet.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type={\"text\"}\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value={\"Update Nweet\"} className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweet.text}</h4>\r\n          {nweet.attachmentUrl && <img src={nweet.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (!!attachment) {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    await dbService.collection(\"nweets\").add({\r\n      text: nweet,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const { files } = event.target;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedevent) => {\r\n      const { result } = finishedevent.currentTarget;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 실시간 firestore listeing\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweet={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount(!newAccount);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Log in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const { name } = event.target;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createAt\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type={\"text\"}\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type={\"submit\"}\r\n          value=\"Updata Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n            </>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing....\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}